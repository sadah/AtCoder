require 'pp'
$DEBUG ? define_method(:dpp){|e|pp e} : define_method(:dpp){|e|}

# 入力値を数値で返却する
def gets_i()
  gets.chomp.to_i
end

# 空白区切の入力を文字列の配列で返す
def get_s_list()
  gets.chomp.split("")
end

chars = [
  [".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", ".", ".", ".", "#", "#", "#", "#", "#", "#"],
  [".", ".", ".", ".", ".", ".", "#", ".", ".", "#", "#", "#", "#", "#", "#", ".", ".", ".", ".", "#"],
  [".", ".", ".", ".", ".", "#", ".", "#", "#", "#", "#", ".", "#", ".", "#", "#", "#", "#", ".", "#"],
  [".", ".", ".", ".", ".", "#", ".", "#", ".", "#", "#", ".", "#", ".", "#", "#", "#", "#", "#", "#"],
  [".", ".", ".", ".", ".", "#", "#", "#", ".", ".", ".", ".", "#", ".", ".", "#", "#", "#", "#", "#"],
  [".", ".", ".", ".", ".", "#", "#", "#", ".", "#", "#", ".", "#", ".", "#", "#", ".", "#", "#", "#"],
  [".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", ".", "#", ".", "#", "#", ".", "#", "#", "#"],
  [".", ".", ".", ".", ".", "#", ".", ".", ".", ".", "#", ".", ".", ".", ".", "#", "#", "#", "#", "#"],
  [".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", ".", "#", ".", "#", "#", "#", "#", "#", "#"],
  [".", ".", ".", ".", ".", "#", "#", "#", ".", "#", "#", ".", "#", ".", "#", "#", "#", "#", "#", "#"]
]

N = gets_i
lights = []
5.times do
  lights.push get_s_list
end

tlights = lights.transpose.each_slice(4).to_a

numbers = []
tlights.each do |tl|
  ftl = tl.flatten!
  numbers.push chars.index(ftl)
end

puts numbers.compact.join